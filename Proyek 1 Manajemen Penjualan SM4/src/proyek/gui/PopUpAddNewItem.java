/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyek.gui;

import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import javax.swing.JOptionPane;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import proyek.organize.Catalog;
import proyek.organize.*;

/**
 *
 * @author C-70
 */
public class PopUpAddNewItem extends javax.swing.JFrame {

    private static final String FILE_PRODUCTS = "src\\proyek\\notes\\products.xlsx";
    private static final String FILE_LOG = "src\\proyek\\notes\\log.xlsx";
    private FrameApp FA;
    private javax.swing.JTable tableList = new javax.swing.JTable();
    private Catalog catalogProduct = new Catalog();
    private Products lastAdded = new Products();
    private Products newProduct = new Products();
    private boolean success;

    /**
     * Creates new form PopUpAddNewItem
     */
    public PopUpAddNewItem() {
        initComponents();
    }

    private boolean FoundInCatalog(Products newProduct) {
        int last = tableList.getRowCount();
        int row = 0;
        int lastStock = 0;
        while (row != last) {
            if ((((String) tableList.getValueAt(row, 1)).equals(newProduct.getProductName().toUpperCase()))) {
//                Jika ketika ada yang sama otomatis menambah stok, dan harga yang sudah ada
                return true;
            }
            row++;
        }
        return false;
    }

    public int SearchProducts(Products newProduct) {
        int indeks = 0;
        while (indeks < catalogProduct.getProducts().size()) {
            if (catalogProduct.getProducts().get(indeks).getProductCode().equals(newProduct.getProductCode())) {
                return indeks;
            } else if (catalogProduct.getProducts().get(indeks).getProductName().equals(newProduct.getProductName())) {
                return indeks;
            }
            indeks++;
        }
        return -1;
    }

    public void writeProducts(Products newProducts) {
        try {
            FileInputStream fileProducts = new FileInputStream(new File(FILE_PRODUCTS));
            XSSFWorkbook workbook = null;
            try {
                workbook = new XSSFWorkbook(fileProducts);
            } catch (IOException e) {
                workbook.createSheet("Products");
            }
            XSSFSheet sheet = workbook.getSheet("Products");
            int row = sheet.getLastRowNum() + 1;

            sheet.createRow(row).createCell(0).setCellValue((String) newProducts.getProductCode());
            sheet.getRow(row).createCell(1).setCellValue((String) newProducts.getProductName());
            sheet.getRow(row).createCell(2).setCellValue((String) newProducts.getProductCategory());
            sheet.getRow(row).createCell(3).setCellValue((int) newProducts.getSalePrice());
            sheet.getRow(row).createCell(4).setCellValue((int) newProducts.getProductStock());
            sheet.getRow(row).createCell(5).setCellValue((int) newProducts.getBuyItemPrice());
            try (FileOutputStream updatefileProducts = new FileOutputStream(new File(FILE_PRODUCTS))) {
                workbook.write(updatefileProducts);
                updatefileProducts.close();
            }
            fileProducts.close();
        } catch (IOException e) {
            
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelBackGround = new javax.swing.JPanel();
        jPanelNewItem = new javax.swing.JPanel();
        jButtonAddNewItem = new javax.swing.JButton();
        jLabelItemName = new javax.swing.JLabel();
        jTextFieldNewName = new javax.swing.JTextField();
        jLabelNewCategory = new javax.swing.JLabel();
        jLabelNewSalePrice = new javax.swing.JLabel();
        jLabelNewStock = new javax.swing.JLabel();
        jTextFieldNewCategory = new javax.swing.JTextField();
        jTextFieldNewSalePrice = new javax.swing.JTextField();
        jTextFieldNewStock = new javax.swing.JTextField();
        jLabelNewBuyPrice = new javax.swing.JLabel();
        jTextFieldNewBuyPrice = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanelBackGround.setBackground(new java.awt.Color(52, 73, 94));
        jPanelBackGround.setPreferredSize(new java.awt.Dimension(455, 235));

        jButtonAddNewItem.setText("Add New Item");
        jButtonAddNewItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonAddNewItemMouseClicked(evt);
            }
        });

        jLabelItemName.setText("Item Name");

        jLabelNewCategory.setText("Item Category");

        jLabelNewSalePrice.setText("Item Sale Price");

        jLabelNewStock.setText("Item Stock");

        jLabelNewBuyPrice.setText("Item Buy Price");

        javax.swing.GroupLayout jPanelNewItemLayout = new javax.swing.GroupLayout(jPanelNewItem);
        jPanelNewItem.setLayout(jPanelNewItemLayout);
        jPanelNewItemLayout.setHorizontalGroup(
            jPanelNewItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelNewItemLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelNewItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelNewCategory)
                    .addComponent(jLabelItemName)
                    .addComponent(jLabelNewSalePrice)
                    .addComponent(jLabelNewStock)
                    .addComponent(jLabelNewBuyPrice))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelNewItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldNewBuyPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                    .addComponent(jTextFieldNewStock)
                    .addComponent(jTextFieldNewSalePrice)
                    .addComponent(jTextFieldNewName)
                    .addComponent(jTextFieldNewCategory))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelNewItemLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonAddNewItem)
                .addGap(133, 133, 133))
        );
        jPanelNewItemLayout.setVerticalGroup(
            jPanelNewItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelNewItemLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelNewItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelItemName)
                    .addComponent(jTextFieldNewName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelNewItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNewCategory)
                    .addComponent(jTextFieldNewCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelNewItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNewSalePrice)
                    .addComponent(jTextFieldNewSalePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelNewItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNewStock)
                    .addComponent(jTextFieldNewStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelNewItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNewBuyPrice)
                    .addComponent(jTextFieldNewBuyPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonAddNewItem)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelBackGroundLayout = new javax.swing.GroupLayout(jPanelBackGround);
        jPanelBackGround.setLayout(jPanelBackGroundLayout);
        jPanelBackGroundLayout.setHorizontalGroup(
            jPanelBackGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBackGroundLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelNewItem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelBackGroundLayout.setVerticalGroup(
            jPanelBackGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBackGroundLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelNewItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelBackGround, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelBackGround, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAddNewItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonAddNewItemMouseClicked
        // TODO add your handling code here:
        setSuccess(false);
        newProduct.setProductName(jTextFieldNewName.getText().toUpperCase());
        newProduct.setProductCategory(jTextFieldNewCategory.getText().toUpperCase());
        newProduct.setSalePrice(new Integer(jTextFieldNewSalePrice.getText()));
        newProduct.setProductStock(new Integer(jTextFieldNewStock.getText()));
        newProduct.setBuyItemPrice(new Integer(jTextFieldNewBuyPrice.getText()));
        if (!FoundInCatalog(newProduct)) {
            newProduct.setProductCode(newProduct.getProductCategory(), catalogProduct);
            catalogProduct.getProducts().add(newProduct);
            setSuccess(true);
            setLastAdded(newProduct);
            try {
                FileInputStream fileProducts = new FileInputStream(new File(FILE_LOG));
                XSSFWorkbook workbook = new XSSFWorkbook(fileProducts);
                XSSFSheet sheet = workbook.getSheetAt(1);
                int row = sheet.getLastRowNum() + 1;      
                String text = "Last Added";
                        
                sheet.createRow(row).createCell(0).setCellValue((String) getLastAdded().getProductCode());
                sheet.getRow(row).createCell(1).setCellValue((String) getLastAdded().getProductName());
                sheet.getRow(row).createCell(2).setCellValue((String) getLastAdded().getProductCategory());
                sheet.getRow(row).createCell(3).setCellValue((int) getLastAdded().getSalePrice());
                sheet.getRow(row).createCell(4).setCellValue((int) getLastAdded().getProductStock());
                sheet.getRow(row).createCell(5).setCellValue((int) getLastAdded().getBuyItemPrice());
                sheet.getRow(row).createCell(6).setCellValue((String) text);
                try (FileOutputStream updatefileProducts = new FileOutputStream(new File(FILE_LOG))) {
                    workbook.write(updatefileProducts);
                    updatefileProducts.close();
                    
                }
                fileProducts.close();
                writeProducts(newProduct);
                JOptionPane.showMessageDialog(null, "Save Success !!");
            } catch (HeadlessException | IOException e) {
                JOptionPane.showMessageDialog(null, "Save Failed !!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Item is available !!");
        }
        FA.jPanelMouseClicked(evt);
        if (isShowing()) {
            setVisible(false);
        }
        jTextFieldNewName.setText("");
        jTextFieldNewCategory.setText("");
        jTextFieldNewSalePrice.setText("");
        jTextFieldNewStock.setText("");
        jTextFieldNewBuyPrice.setText("");
        newProduct = new Products();
        java.awt.Toolkit.getDefaultToolkit().setLockingKeyState(KeyEvent.VK_CAPS_LOCK, false);
    }//GEN-LAST:event_jButtonAddNewItemMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PopUpAddNewItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PopUpAddNewItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PopUpAddNewItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PopUpAddNewItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PopUpAddNewItem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton jButtonAddNewItem;
    private javax.swing.JLabel jLabelItemName;
    private javax.swing.JLabel jLabelNewBuyPrice;
    private javax.swing.JLabel jLabelNewCategory;
    private javax.swing.JLabel jLabelNewSalePrice;
    private javax.swing.JLabel jLabelNewStock;
    private javax.swing.JPanel jPanelBackGround;
    private javax.swing.JPanel jPanelNewItem;
    public javax.swing.JTextField jTextFieldNewBuyPrice;
    public javax.swing.JTextField jTextFieldNewCategory;
    public javax.swing.JTextField jTextFieldNewName;
    public javax.swing.JTextField jTextFieldNewSalePrice;
    public javax.swing.JTextField jTextFieldNewStock;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the catalogProduct
     */
    public Catalog getCatalogProduct() {
        return catalogProduct;
    }

    /**
     * @param catalogProduct the catalogProduct to set
     * @param tableList
     */
    public void setPopUp(Catalog catalogProduct, javax.swing.JTable tableList) {
        this.catalogProduct = catalogProduct;
        this.tableList = tableList;
    }

    /**
     * @return the newProduct
     */
    public Products getNewProduct() {
        return newProduct;
    }

    /**
     * @param newProduct the newProduct to set
     */
    public void setNewProduct(Products newProduct) {
        this.newProduct = newProduct;
    }

    /**
     * @return the tableList
     */
    public javax.swing.JTable getTableList() {
        return tableList;
    }

    /**
     * @return the success
     */
    public boolean isSuccess() {
        return success;
    }

    /**
     * @return the FA
     */
    public FrameApp getFA() {
        return FA;
    }

    /**
     * @param FA the FA to set
     */
    public void setFA(FrameApp FA) {
        this.FA = FA;
    }

    /**
     * @param success the success to set
     */
    public void setSuccess(boolean success) {
        this.success = success;
    }

    /**
     * @return the lastAdded
     */
    public Products getLastAdded() {
        return lastAdded;
    }

    /**
     * @param lastAdded the lastAdded to set
     */
    public void setLastAdded(Products lastAdded) {
        this.lastAdded = lastAdded;
    }
}
