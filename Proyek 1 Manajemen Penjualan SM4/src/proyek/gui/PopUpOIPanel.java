/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyek.gui;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import proyek.organize.Catalog;
import proyek.organize.Products;

/**
 *
 * @author C-70
 */
public class PopUpOIPanel extends javax.swing.JFrame {

    private static final String FILE_PRODUCTS = "src\\proyek\\notes\\products.xlsx";
    private static final String FILE_LOG = "src\\proyek\\notes\\log.xlsx";
    private javax.swing.JTable tableList = new javax.swing.JTable();
    private Catalog catalogProduct = new Catalog();
    private int indeksInTable;
    private Products product = new Products();

    /**
     * Creates new form PopUpOIPanel
     */
    public PopUpOIPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelBackGround = new javax.swing.JPanel();
        jPanelProduct = new javax.swing.JPanel();
        jLabelHeader = new javax.swing.JLabel();
        jLabelCode = new javax.swing.JLabel();
        jLabelName = new javax.swing.JLabel();
        jLabelCategory = new javax.swing.JLabel();
        jLabelSalePrice = new javax.swing.JLabel();
        jLabelStock = new javax.swing.JLabel();
        jLabelBuyPrice = new javax.swing.JLabel();
        jTextFieldBuyPrice = new javax.swing.JTextField();
        jTextFieldStock = new javax.swing.JTextField();
        jTextFieldSalePrice = new javax.swing.JTextField();
        jLabelTextCategory = new javax.swing.JLabel();
        jLabelTextName = new javax.swing.JLabel();
        jLabelTextCode = new javax.swing.JLabel();
        jButtonDoneEdit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setName(""); // NOI18N

        jPanelBackGround.setBackground(new java.awt.Color(52, 73, 94));
        jPanelBackGround.setPreferredSize(new java.awt.Dimension(455, 235));

        jPanelProduct.setBackground(new java.awt.Color(255, 255, 255));

        jLabelHeader.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelHeader.setText("Edit Item");

        jLabelCode.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelCode.setText("Item Code");

        jLabelName.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelName.setText("Item Name");

        jLabelCategory.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelCategory.setText("Item Category");

        jLabelSalePrice.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelSalePrice.setText("Item Sale Price");

        jLabelStock.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelStock.setText("Item Stock");

        jLabelBuyPrice.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelBuyPrice.setText("Item Buy Price");

        javax.swing.GroupLayout jPanelProductLayout = new javax.swing.GroupLayout(jPanelProduct);
        jPanelProduct.setLayout(jPanelProductLayout);
        jPanelProductLayout.setHorizontalGroup(
            jPanelProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProductLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelProductLayout.createSequentialGroup()
                        .addComponent(jLabelCode, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelTextCode, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelProductLayout.createSequentialGroup()
                        .addComponent(jLabelName, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelTextName, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabelHeader)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelProductLayout.createSequentialGroup()
                        .addGroup(jPanelProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelCategory)
                            .addComponent(jLabelSalePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelStock, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelBuyPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanelProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanelProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextFieldBuyPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextFieldStock, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextFieldSalePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabelTextCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanelProductLayout.setVerticalGroup(
            jPanelProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProductLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelHeader)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelCode, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTextCode, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanelProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelName, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTextName, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTextCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelSalePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldSalePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelStock, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelBuyPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldBuyPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jButtonDoneEdit.setBackground(new java.awt.Color(255, 255, 255));
        jButtonDoneEdit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonDoneEdit.setText("Done");
        jButtonDoneEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDoneEditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelBackGroundLayout = new javax.swing.GroupLayout(jPanelBackGround);
        jPanelBackGround.setLayout(jPanelBackGroundLayout);
        jPanelBackGroundLayout.setHorizontalGroup(
            jPanelBackGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBackGroundLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBackGroundLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonDoneEdit)
                .addContainerGap())
        );
        jPanelBackGroundLayout.setVerticalGroup(
            jPanelBackGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBackGroundLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonDoneEdit)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelBackGround, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelBackGround, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonDoneEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDoneEditActionPerformed
        // TODO add your handling code here:
        setProduct(setEditProduct());
        try {
            FileInputStream fileProducts = new FileInputStream(new File(FILE_LOG));
            XSSFWorkbook workbook = new XSSFWorkbook(fileProducts);
            XSSFSheet sheet = workbook.getSheetAt(1);
            int rowIt = sheet.getLastRowNum() + 1;
            String text = "Last Added";

            sheet.createRow(rowIt).createCell(0).setCellValue((String) getProduct().getProductCode());
            sheet.getRow(rowIt).createCell(1).setCellValue((String) getProduct().getProductName());
            sheet.getRow(rowIt).createCell(2).setCellValue((String) getProduct().getProductCategory());
            sheet.getRow(rowIt).createCell(3).setCellValue((int) getProduct().getSalePrice());
            sheet.getRow(rowIt).createCell(4).setCellValue((int) getProduct().getProductStock());
            sheet.getRow(rowIt).createCell(5).setCellValue((int) getProduct().getBuyItemPrice());
            sheet.getRow(rowIt).createCell(6).setCellValue((String) text);
            try (FileOutputStream updatefileProducts = new FileOutputStream(new File(FILE_LOG))) {
                workbook.write(updatefileProducts);
                updatefileProducts.close();
            }
            fileProducts.close();
            writeProducts(tableList);
            JOptionPane.showMessageDialog(null, "Save Success !!");
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Save Failed !!");
            Logger.getLogger(TransactionPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (isShowing()) {
            setVisible(false);
        }
    }//GEN-LAST:event_jButtonDoneEditActionPerformed

    private void writeProducts(javax.swing.JTable tableList) {
        try {
            FileInputStream fis = new FileInputStream(new File(FILE_PRODUCTS));
            XSSFWorkbook workbook = new XSSFWorkbook(fis);
            XSSFSheet sheet = workbook.getSheetAt(0);
            int row = 1;
            
            for (int i = 0; i < tableList.getRowCount(); i++) {
                sheet.createRow(row).createCell(0).setCellValue((String) tableList.getValueAt(i, 0));
                sheet.getRow(row).createCell(1).setCellValue((String) tableList.getValueAt(i, 1));
                sheet.getRow(row).createCell(2).setCellValue((String) tableList.getValueAt(i, 2));
                sheet.getRow(row).createCell(3).setCellValue((int) tableList.getValueAt(i, 3));
                sheet.getRow(row).createCell(4).setCellValue((int) tableList.getValueAt(i, 4));
                sheet.getRow(row).createCell(5).setCellValue((int) tableList.getValueAt(i, 5));
                row++;
            }

            try (FileOutputStream fos = new FileOutputStream(new File(FILE_PRODUCTS))) {
                workbook.write(fos);
                fos.close();
            }
            fis.close();
        } catch (IOException ex) {
            Logger.getLogger(TransactionPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private Products setEditProduct() {
        product.setProductCode(jLabelTextCode.getText().toUpperCase());
        product.setProductName(jLabelTextName.getText().toUpperCase());
        product.setProductCategory(jLabelTextCategory.getText().toUpperCase());
        product.setSalePrice(new Integer(jTextFieldSalePrice.getText()));
        product.setProductStock(new Integer(jTextFieldStock.getText()));
        product.setBuyItemPrice(new Integer(jTextFieldBuyPrice.getText()));

        int last = tableList.getRowCount();
        int row = 0;
        int lastStock = 0;
        while (row != last) {
            if (((String) tableList.getValueAt(row, 0)).equals(product.getProductCode()) || (((String) tableList.getValueAt(row, 1)).equals(product.getProductName()))) {
                int indeks = SearchProducts(product);
                catalogProduct.getProducts().get(indeks).setSalePrice(product.getSalePrice());
                catalogProduct.getProducts().get(indeks).setProductStock(product.getProductStock());
                catalogProduct.getProducts().get(indeks).setBuyItemPrice(product.getBuyItemPrice());
            }
            row++;
        }
        setProduct(product);
        setCatalogProduct(catalogProduct);
        
        tableList.setValueAt(product.getProductCode(), indeksInTable, 0);
        tableList.setValueAt(product.getProductName(), indeksInTable, 1);
        tableList.setValueAt(product.getProductCategory(), indeksInTable, 2);
        tableList.setValueAt(product.getSalePrice(), indeksInTable, 3);
        tableList.setValueAt(product.getProductStock(), indeksInTable, 4);
        tableList.setValueAt(product.getBuyItemPrice(), indeksInTable, 5);

        return product;
    }

    public int SearchProducts(Products product) {
        int indeks = 0;
        while (indeks < getCatalogProduct().getProducts().size()) {
            if (getCatalogProduct().getProducts().get(indeks).getProductCode().equals(product.getProductCode())) {
                return indeks;
            } else if (getCatalogProduct().getProducts().get(indeks).getProductName().equals(product.getProductName())) {
                return indeks;
            }
            indeks++;
        }
        return -1;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PopUpOIPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PopUpOIPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PopUpOIPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PopUpOIPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PopUpOIPanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton jButtonDoneEdit;
    private javax.swing.JLabel jLabelBuyPrice;
    private javax.swing.JLabel jLabelCategory;
    private javax.swing.JLabel jLabelCode;
    private javax.swing.JLabel jLabelHeader;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JLabel jLabelSalePrice;
    private javax.swing.JLabel jLabelStock;
    public javax.swing.JLabel jLabelTextCategory;
    public javax.swing.JLabel jLabelTextCode;
    public javax.swing.JLabel jLabelTextName;
    private javax.swing.JPanel jPanelBackGround;
    private javax.swing.JPanel jPanelProduct;
    public javax.swing.JTextField jTextFieldBuyPrice;
    public javax.swing.JTextField jTextFieldSalePrice;
    public javax.swing.JTextField jTextFieldStock;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the tableList
     */
    public javax.swing.JTable getTableList() {
        return tableList;
    }

    /**
     * @param tableList the tableList to set
     * @param indeksInTable
     * @param catalogProduct
     */
    public void setEdit(javax.swing.JTable tableList, int indeksInTable, Catalog catalogProduct) {
        this.indeksInTable = indeksInTable;
        this.tableList = tableList;
        this.setCatalogProduct(catalogProduct);
    }

    /**
     * @return the indeksInTable
     */
    public int getIndeksInTable() {
        return indeksInTable;
    }

    /**
     * @return the product
     */
    public Products getProduct() {
        return product;
    }

    /**
     * @param product the product to set
     */
    public void setProduct(Products product) {
        this.product = product;
    }

    /**
     * @return the catalogProduct
     */
    public Catalog getCatalogProduct() {
        return catalogProduct;
    }

    /**
     * @param catalogProduct the catalogProduct to set
     */
    public void setCatalogProduct(Catalog catalogProduct) {
        this.catalogProduct = catalogProduct;
    }
}
